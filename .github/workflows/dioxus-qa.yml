name: Dioxus QA

on:
    workflow_call:
        inputs:
            toolchain:
                description: "Rust toolchain"
                required: false
                type: string
                default: "nightly"
            platform:
                description: "Platform to QA (desktop, web, android, ios, or all)"
                required: false
                type: string
                default: "all"

jobs:
    desktop-qa:
        if: ${{ inputs.platform == 'all' || inputs.platform == 'desktop' }}
        name: Desktop QA (${{ matrix.os }})
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: nigeleke/github/.github/actions/os-prerequisites@main
              with:
                  os: ${{ matrix.os }}

            - uses: nigeleke/github/.github/actions/dioxus-setup@main
              with:
                  toolchain: nightly

            - uses: nigekeke/github/.github/actions/rust-qa@main

    web-qa:
        if: ${{ inputs.platform == 'all' || inputs.platform == 'web' }}
        name: Web QA
        runs-on: ubuntu-latest
        steps:
            - uses: nigeleke/github/.github/actions/os-prerequisites@main
              with:
                  os: ubuntu-latest

            - uses: nigeleke/github/.github/actions/dioxus-setup@main
              with:
                  toolchain: ${{ inputs.toolchain }}

            - uses: nigekeke/github/.github/actions/rust-qa@main

    android-qa:
        if: ${{ inputs.platform == 'all' || inputs.platform == 'android' }}
        name: Android QA
        runs-on: ubuntu-latest
        steps:
            - uses: nigeleke/github/.github/actions/os-prerequisites@main
              with:
                  os: ubuntu-latest

            - uses: nigeleke/github/.github/actions/dioxus-setup@main
              with:
                  toolchain: ${{ inputs.toolchain }}

            - name: Add Android targets
              run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: Set up Android SDK and NDK
              run: |
                  wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
                  unzip commandlinetools-linux-11076708_latest.zip -d android-sdk
                  mv android-sdk/cmdline-tools android-sdk/latest
                  export ANDROID_HOME=$PWD/android-sdk
                  echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
                  yes | $ANDROID_HOME/latest/bin/sdkmanager --licenses
                  $ANDROID_HOME/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;26.1.10909125"
                  export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/26.1.10909125
                  echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV

            - uses: nigekeke/github/.github/actions/rust-qa@main

    ios-qa:
        if: ${{ inputs.platform == 'all' || inputs.platform == 'ios' }}
        name: iOS QA
        runs-on: macos-latest
        steps:
            - uses: nigeleke/github/.github/actions/os-prerequisites@main
              with:
                  os: macos-latest

            - uses: nigeleke/github/.github/actions/dioxus-setup@main
              with:
                  toolchain: ${{ inputs.toolchain }}

            - name: Add iOS targets
              run: rustup target add aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios

            - uses: nigekeke/github/.github/actions/rust-qa@main
